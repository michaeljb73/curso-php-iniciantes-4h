'Cmd/Ctrl+Enter' // Triggers `Todo: Toggle Box`
'Alt+Enter' // Triggers `Todo: Toggle Box`
'Alt+D' // Triggers `Todo: Toggle Done`
'Alt+C' // Triggers `Todo: Toggle Cancelled`
'Alt+S' // Triggers `Todo: Toggle Start`
'Cmd/Ctrl+Shift+A' // Triggers  `Todo: Archive`

Curso php básico:
    ✔ 00:00 - Instalar o php @done(23-07-05 22:43)
    ✔ 05:50 - Include e require @done(23-07-05 22:43)
    ✔ 16:40 - Variáveis @done(23-07-05 22:43)
    ✔ 29:23 - Constantes @done(23-07-05 22:43)
    ✔ 34:36 - Instrução e ponto e vírgula @done(23-07-05 22:43)
    ✔ 38:49 - Operadores aritméticos @done(23-07-05 22:43)
    ✔ 44:30 - Operadores de atribuição @done(23-07-05 22:44)
    ✔ 49:27 - Incremento e decremento @done(23-07-05 22:44)
    ✔ 51:58 - Operadores de comparação @done(23-07-05 22:44)
    ✔ 57:53 - Operadores lógicos @done(23-07-05 22:44)
    ✔ 01:05:15 - Thruty e Falsy @done(23-07-05 22:44)
    ✔ 01:08:31 - If e else @done(23-07-05 22:44)
    ✔ 01:17:29 - Switch @done(23-07-05 22:44)
    ✔ 01:20:20 - Booleanos @done(23-07-05 22:44)
    ✔ 01:30:19 - Strings @done(23-07-05 22:44)
    ✔ 01:37:41 - Numbers @done(23-07-05 22:44)
    ✔ 01:43:19 - Arrays @done(23-07-05 22:44)
    ✔ 01:59:08 - Mudando tipos de dados @done(23-07-05 22:44)
    ✔ 02:09:05 - Loopings - for @done(23-07-05 22:55)
    ✔ 02:12:38 - Loopings - while @done(23-07-05 22:55)
    ✔ 02:14:16 - Loopings - do while @done(23-07-05 22:55)
    ✔ 02:16:08 - Foreach @done(23-07-05 23:00)
    ✔ 02:17:59 - Continue e break @done(23-07-05 23:15)
    ✔ 02:22:17 - Funções @done(23-07-08 17:51)
    ✔ 02:29:50 - Closures @done(23-07-08 18:04)
    ✔ 02:37:10 - Callbacks @done(23-07-08 23:58)
        ✔ O que é um callback @done(23-07-08 21:47)
            ✔ Funções passadas como parâmetro para outras funções(Exemplo 1) @done(23-07-08 21:47)
        ✔ Verificar se é callback com is_callable (Exemplo 2) @done(23-07-08 23:03)
        ✔ call_user_func @done(23-07-08 23:13)
            ✔ Chama uma função e seu parâmetro (Exemplo 3) @done(23-07-08 23:13)
            ✔ Chamar primeiro parâmetro com array caso for um objeto com método estático ou não e queira usar um método dele (Exemplo 4) @done(23-07-08 23:32)
        ✔ call_user_func dentro de outras funções (Exemplo 5) @done(23-07-08 23:36)
        ✔ __invoke pode ser passado como callback (Exemplo 6) @done(23-07-08 23:49)
            ✔ Instanciar objeto e passar como callback para call_user_func ou para outra função @done(23-07-08 23:53)
        ✔ call_user_func_array (Exemplo 7) @done(23-07-08 23:57)
            ✔ Passa parâmetros por array @done(23-07-08 23:57)
        ✔ Métodos de objetos podem ser passadoscomo callback @done(23-07-08 23:57)
        ✔ Usar uma closure como callback @done(23-07-08 23:57)
    ✔ 02:56:58 - Verificar se variável existe @done(23-07-09 00:15)
    ☐ 02:59:36 - Escopo e variável global
    ☐ 03:02:04 - Super Globais
    ☐ 03:07:08 - Cookies
    ☐ 03:14:17 - Sessões
    ☐ 03:23:55 - Variáveis de ambiente
    ☐ 03:31:31 - Variáveis do servidor
    ☐ 03:38:36 - $_GET e $_POST
    ☐ 03:49:27 - Arquivos do formulário
    ☐ 03:53:21 - Sanitizadores e Validates